version: "3"
volumes:
  shared-workspace:
    # name: "hadoop-distributed-file-system"
    # driver: local
  postgres-db-volume:
services:
  jupyterlab:
    image: stevenhurwitt/jupyterlab
    container_name: jupyterlab
    environment:
      - JUPYTER_TOKEN=easy
    networks:
      - reddit_streaming
    ports:
      - 8899:8888
    volumes:
      - shared-workspace:/opt/workspace
      - ./redditStreaming:/opt/workspace/redditStreaming

  spark-master:
    image: stevenhurwitt/spark-master
    container_name: spark-master
    hostname: spark-master
    networks:
      - reddit_streaming
    ports:
      - 8008:8080
      - 7077:7077
      - 4043:4040
    volumes:
      - shared-workspace:/opt/workspace

  spark-worker-1:
    image: stevenhurwitt/spark-worker
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=4
      - SPARK_WORKER_MEMORY=8192m
    ports:
      - 4041:4040
      - 8083:8081
      - 18081:18080
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
    networks:
      - reddit_streaming

  spark-worker-2:
    image: stevenhurwitt/spark-worker
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=4
      - SPARK_WORKER_MEMORY=8192m
    ports:
      - 4042:4040
      - 8082:8082
      - 18082:18080
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master
    networks:
      - reddit_streaming

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Secret!12345
      # POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    hostname: postgres
    networks:
      - reddit_streaming
    ports: 
      - "5432:5432"

  zookeeper:
    # image: wurstmeister/zookeeper
    image: ghcr.io/arm64-compat/confluentinc/cp-zookeeper:7.1.1
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - reddit_streaming
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    restart: always
    volumes:
      - ./cluster_config/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    # image: wurstmeister/kafka
    image: ghcr.io/arm64-compat/confluentinc/cp-kafka:7.1.1
    container_name: kafka
    hostname: kafka
    networks:
      - reddit_streaming
    ports:
      - "9092:9092"
      - "8081:8081"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.50.114 #ip of local machine
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 997 # comment out if using multiple brokers
      # KAFKA_CREATE_TOPICS: "test-topic:5:2"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always
    depends_on:
      - zookeeper
    # entrypoint: /tmp/entrypoint.sh
    volumes: 
      - ./cluster_config/kafka/logs:/kafka/kafka-logs
      - ./cluster_config/kafka/config:/opt/kafka/config
      # - ./entrypoint.sh:/tmp/entrypoint.sh
      - /var/run/docker.sock:/var/run/docker.sock

  kowl:
    image: docker.redpanda.com/vectorized/console:master-217260f
    container_name: redpanda_console
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["192.168.50.114:9092"]
    ports:
      - "8085:8080"
    depends_on:
      - kafka

  # ganglia:
  #   image: kurthuwig/ganglia:latest
  #   container_name: ganglia
  #   restart: on-failure
  #   ports:
  #   - "127.0.0.1:80:80"
  #   - "8649:8649"
  #   - "8649:8649/udp"
  #   volumes:
  #   - ./cluster_config/ganglia/etc:/etc/ganglia
  #   - ./cluster_config/ganglia/data:/var/lib/ganglia
