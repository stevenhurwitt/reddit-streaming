version: "3"
volumes:
  shared-workspace:
    # name: "hadoop-distributed-file-system"
    # driver: local
  postgres-db-volume:
services:
  jupyterlab:
    image: stevenhurwitt/jupyterlab
    container_name: jupyterlab
    environment:
      - JUPYTER_TOKEN=easy
    ports:
      - 8899:8888
    volumes:
      - shared-workspace:/opt/workspace
      - ./redditStreaming:/opt/workspace/redditStreaming

  spark-master:
    image: stevenhurwitt/spark-master
    container_name: spark-master
    hostname: spark-master
    ports:
      - 8008:8080
      - 7077:7077
      - 4040:4040
    volumes:
      - shared-workspace:/opt/workspace

  spark-worker-1:
    image: stevenhurwitt/spark-worker
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=2g
    ports:
      - 4041:4040
      - 18081:18080
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  spark-worker-2:
    image: stevenhurwitt/spark-worker
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=2g
    ports:
      - 4042:4040
      - 18082:18080
    volumes:
      - shared-workspace:/opt/workspace
    depends_on:
      - spark-master

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    hostname: postgres
    ports: 
      - "5432:5432"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: always
    volumes:
      - ./cluster_config/zookeeper/data:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.16.100.35  #ip of local machine
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 997 # comment out if using multiple brokers
      # KAFKA_CREATE_TOPICS: "test-topic:5:2"
    restart: always
    depends_on:
      - zookeeper
    # entrypoint: /tmp/entrypoint.sh
    volumes: 
      - ./cluster_config/kafka/logs:/kafka/kafka-logs
      - ./cluster_config/kafka/config:/opt/kafka/config
      # - ./entrypoint.sh:/tmp/entrypoint.sh
      - /var/run/docker.sock:/var/run/docker.sock
